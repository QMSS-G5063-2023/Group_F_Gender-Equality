# Convert the data to a long format
employment_data_long <- gather(employment_data, year, employment, X2000:X2016, na.rm = TRUE)
# Add a 'year' column by extracting the year from the 'year' column
employment_data_long$year <- as.integer(substr(employment_data_long$year, 2, 5))
# Convert the 'employment' column to numeric
employment_data_long$employment <- as.numeric(employment_data_long$employment)
# Remove any missing values
employment_data_long <- na.omit(employment_data_long)
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#FC4F30"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment to Population Ratio (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 11),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#FC4F30"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 11),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#FC4F30"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 11),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#FC4F30"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
earning <- read.csv("income-by-gender.csv")
# Rename Measure.Values column to income
names(earning)[names(earning) == "Measure.Values"] <- "income"
# Rename Measures.Names column to Gender
names(earning)[names(earning) == "Measure.Names"] <- "Gender"
earning <- earning %>%
filter(Gender %in% c("Total Men", "Total Women")) %>%
mutate(Income = as.numeric(gsub("[^0-9]", "", Income)))
ggplot(data = earning, aes(x = Year, y = Income, color = Gender)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#FC4F30"), name = "Gender", labels = c("Total Men", "Total Women")) +
labs(title = "Income in the United States",
x = "Year",
y = "Income") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
earning <- earning %>%
filter(Gender %in% c("Total Men", "Total Women")) %>%
mutate(Income = as.numeric(gsub("[^0-9]", "", Income)))
ggplot(data = earning, aes(x = Year, y = Income, color = Gender)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#FC4F30"), name = "Gender", labels = c("Male", "Female")) +
labs(title = "Income in the United States",
x = "Year",
y = "Income") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker)) +
geom_col(fill = "#008FD5") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker)) +
geom_col(fill = "#008FD5") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker)) +
geom_col(fill = "#FC4F30") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker)) +
geom_col(fill = "#F8BBD0") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
earning <- earning %>%
filter(Gender %in% c("Total Men", "Total Women")) %>%
mutate(Income = as.numeric(gsub("[^0-9]", "", Income)))
ggplot(data = earning, aes(x = Year, y = Income, color = Gender)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#F8BBD0"), name = "Gender", labels = c("Male", "Female")) +
labs(title = "Income in the United States",
x = "Year",
y = "Income") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#E91E63"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#EC407A"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#F06292"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#F06292", "#008FD5""), name = "Gender", labels = c("Female", "Male")) +
library(ggplot2)
library(ggthemes)
# set the file name and type for the plot image
#png("employment_comparison_US_2000-2016.png")
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#F06292", "#008FD5"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
earning <- earning %>%
filter(Gender %in% c("Total Men", "Total Women")) %>%
mutate(Income = as.numeric(gsub("[^0-9]", "", Income)))
ggplot(data = earning, aes(x = Year, y = Income, color = Gender)) +
geom_line(size = 1) +
scale_color_manual(values = c("#008FD5", "#F06292"), name = "Gender", labels = c("Male", "Female")) +
labs(title = "Income in the United States",
x = "Year",
y = "Income") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
View(occupations)
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers (in 1000)") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers (in 1000)") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.yx = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers (in 1000)") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers (in 1000)") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 1, r = 10, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers (in 1000)") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 1, r = 10, b = 1, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
knitr::opts_chunk$set(echo = TRUE)
# Load the required packages
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(plotly)
library(igraph)
# Set the file path
file_path <- "openwatchgender.csv"
# Read the file using read.csv() function
data <- read.csv(file_path, header = TRUE)
# Filter the data for the indicator names 'Employment to Population Ratio (% of population), female' and 'Employment to Population Ratio (% of population), male'
employment_data <- subset(data, indicator_name %in% c("Employment to Population Ratio (% of population), female", "Employment to Population Ratio (% of population), male"))
# Convert the data to a long format
employment_data_long <- gather(employment_data, year, employment, X2000:X2016, na.rm = TRUE)
# Add a 'year' column by extracting the year from the 'year' column
employment_data_long$year <- as.integer(substr(employment_data_long$year, 2, 5))
# Convert the 'employment' column to numeric
employment_data_long$employment <- as.numeric(employment_data_long$employment)
# Remove any missing values
employment_data_long <- na.omit(employment_data_long)
# Filter the data for the United States
employment_data_us <- filter(employment_data_long, country_name == "United States")
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(size = 1) +
scale_color_manual(values = c("#F06292", "#008FD5"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
# Create the plot
ggplot(employment_data_us, aes(x = year, y = employment, color = indicator_name)) +
geom_line(linewidth = 1) +
scale_color_manual(values = c("#F06292", "#008FD5"), name = "Gender", labels = c("Female", "Male")) +
labs(title = "Employment in the United States",
x = "Year",
y = "Employment (% of population)") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
earning <- read.csv("income-by-gender.csv")
# Rename Measure.Values column to income
names(earning)[names(earning) == "Measure.Values"] <- "income"
# Rename Measures.Names column to Gender
names(earning)[names(earning) == "Measure.Names"] <- "Gender"
earning <- earning %>%
filter(Gender %in% c("Total Men", "Total Women")) %>%
mutate(Income = as.numeric(gsub("[^0-9]", "", Income)))
ggplot(data = earning, aes(x = Year, y = Income, color = Gender)) +
geom_line(linewidth = 1) +
scale_color_manual(values = c("#008FD5", "#F06292"), name = "Gender", labels = c("Male", "Female")) +
labs(title = "Income in the United States",
x = "Year",
y = "Income") +
theme_economist() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
occupations <- read.csv("top-10-women-occupations.csv")
# Sort the data frame by rank
occupations <- occupations[order(-occupations$Rank),]
# Remove non-numeric characters from the Worker column
occupations$Worker <- as.numeric(gsub("[^0-9]+", "", occupations$Worker))
# Create the vertical bar chart
ggplot(occupations, aes(x = reorder(Occupation, -Worker), y = Worker/1000)) +
geom_col(fill = "#F06292") +
labs(title = "Top 10 Women Occupations", x = "Occupations", y = "Number of Workers (in 1000)") +
theme_economist() +
coord_flip() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
axis.title = element_text(size = 11),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
axis.title.x = element_text(margin = margin(t = 1, r = 10, b = 1, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))
trends <- read_csv("Lazega-Atts.csv")
trends <- read.csv("Lazega-Atts.csv")
advice <- read.csv("Lazega-Advice-Net-B_20-_20Sheet_201+_2_.csv")
# create loop to count frequencies of 1s per ID (try as cannot merge otherwise)
interactions <- numeric()
for (i in 1:(nrow(advice)-1)) {
str_i <- as.character(i)
new <- sum(advice[str_i])
interactions <- c(interactions, new)
}
fig <- plot_ly(x = Advice_interactions$practice, y = Advice_interactions$Interactions, color = factor(Advice_interactions$gender) , type = "box")
